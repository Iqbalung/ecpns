{"ast":null,"code":"import _defineProperty from\"/home/fathurrohman/Works/eduvibe/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"/home/fathurrohman/Works/eduvibe/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _toConsumableArray from\"/home/fathurrohman/Works/eduvibe/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";var filter_reducer=function filter_reducer(state,action){if(action.type==='LOAD_COURSES'){var maxPrice=action.payload.map(function(p){return p.price;});maxPrice=Math.max.apply(Math,_toConsumableArray(maxPrice));var minPrice=action.payload.map(function(p){return p.price;});minPrice=Math.min.apply(Math,_toConsumableArray(minPrice));return _objectSpread(_objectSpread({},state),{},{all_courses:_toConsumableArray(action.payload),filtered_courses:_toConsumableArray(action.payload),filters:_objectSpread(_objectSpread({},state.filters),{},{max_price:maxPrice,min_price:minPrice,price:maxPrice})});}if(action.type==='UPDATE_SORT'){return _objectSpread(_objectSpread({},state),{},{sorting:action.payload});}if(action.type==='UPDATE_SEARCH'){var _action$payload=action.payload,name=_action$payload.name,value=_action$payload.value;return _objectSpread(_objectSpread({},state),{},_defineProperty({},name,value));}if(action.type==='SEARCH_COURSES'){var searchbycourse=state.searchbycourse,filtered_courses=state.filtered_courses;var tempCourses=_toConsumableArray(filtered_courses);if(searchbycourse){tempCourses=tempCourses.filter(function(course){return course.title.toLowerCase().search(searchbycourse.toLowerCase().trim())!==-1;});}return _objectSpread(_objectSpread({},state),{},{filtered_courses:tempCourses});}if(action.type==='UPDATE_FILTERS'){var _action$payload2=action.payload,_name=_action$payload2.name,_value=_action$payload2.value;return _objectSpread(_objectSpread({},state),{},{filters:_objectSpread(_objectSpread({},state.filters),{},_defineProperty({},_name,_value))});}if(action.type==='FILTER_COURSES'){var all_courses=state.all_courses;var _state$filters=state.filters,filterbylevel=_state$filters.filterbylevel,filterbyprice=_state$filters.filterbyprice,coursesortby=_state$filters.coursesortby,price=_state$filters.price;var _tempCourses=_toConsumableArray(all_courses);if(filterbylevel!=='all'){_tempCourses=_tempCourses.filter(function(course){return course.level===filterbylevel;});}if(coursesortby==='name-a'){_tempCourses=_tempCourses.sort(function(a,b){return a.title.localeCompare(b.title);});}if(coursesortby==='name-z'){_tempCourses=_tempCourses.sort(function(a,b){return b.title.localeCompare(a.title);});}if(coursesortby==='featured'){_tempCourses=_tempCourses.filter(function(course){return course.featured===true;});}if(filterbyprice==='price-lowest'){_tempCourses=_tempCourses.sort(function(a,b){return a.price-b.price;});}if(filterbyprice==='price-highest'){_tempCourses=_tempCourses.sort(function(a,b){return b.price-a.price;});}if(filterbyprice==='free'){_tempCourses=_tempCourses.filter(function(course){return course.price==='0';});}if(filterbyprice==='paid'){_tempCourses=_tempCourses.filter(function(course){return course.price!=='0';});}// price range\n_tempCourses=_tempCourses.filter(function(course){return course.price<=price;});return _objectSpread(_objectSpread({},state),{},{filtered_courses:_tempCourses});}if(action.type==='CLEAR_FILTERS'){return _objectSpread(_objectSpread({},state),{},{searchbycourse:'',filters:_objectSpread(_objectSpread({},state.filters),{},{text:'',coursesortby:'none',filterbyprice:'no-filter-price',filterbylevel:'all',price:state.filters.max_price})});}throw new Error(\"No Matching '\".concat(action.type,\"' - action type found.\"));};export default filter_reducer;","map":{"version":3,"sources":["/home/fathurrohman/Works/eduvibe/src/reducers/filter_reducer.js"],"names":["filter_reducer","state","action","type","maxPrice","payload","map","p","price","Math","max","minPrice","min","all_courses","filtered_courses","filters","max_price","min_price","sorting","name","value","searchbycourse","tempCourses","filter","course","title","toLowerCase","search","trim","filterbylevel","filterbyprice","coursesortby","level","sort","a","b","localeCompare","featured","text","Error"],"mappings":"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","sourcesContent":["const filter_reducer = ( state, action ) => {\n    if ( action.type === 'LOAD_COURSES' ) {\n        let maxPrice = action.payload.map( ( p ) => p.price )\n        maxPrice = Math.max( ...maxPrice )\n            \n        let minPrice = action.payload.map( ( p ) => p.price )\n        minPrice = Math.min( ...minPrice )\n\n        return {\n            ...state,\n            all_courses: [...action.payload],\n            filtered_courses: [...action.payload],\n            filters: { \n                ...state.filters, \n                max_price: maxPrice, \n                min_price: minPrice, \n                price: maxPrice \n            }\n        }\n    }\n\n    if ( action.type === 'UPDATE_SORT' ) {\n        return { ...state, sorting: action.payload }\n    }\n\n    if ( action.type === 'UPDATE_SEARCH' ) {\n        const { name, value } = action.payload;\n        return { ...state, [name]: value }\n    }\n\n    if ( action.type === 'SEARCH_COURSES' ) {\n        const { searchbycourse, filtered_courses } = state;\n        let tempCourses = [...filtered_courses];\n        if ( searchbycourse ) {\n            tempCourses = tempCourses.filter( ( course ) => {\n                return course.title.toLowerCase().search( searchbycourse.toLowerCase().trim() ) !== -1\n            } )\n        }\n        return { ...state, filtered_courses: tempCourses }\n    }\n\n    if ( action.type === 'UPDATE_FILTERS' ) {\n        const { name, value } = action.payload\n        return { ...state, filters: { ...state.filters, [name]: value } }\n    }\n\n    if ( action.type === 'FILTER_COURSES' ) {\n        const { all_courses } = state\n        const { filterbylevel, filterbyprice, coursesortby, price } = state.filters\n        let tempCourses = [...all_courses];\n        \n        if ( filterbylevel !== 'all' ) {\n            tempCourses = tempCourses.filter(\n                ( course ) => course.level === filterbylevel\n            )\n        }\n\n        if ( coursesortby === 'name-a' ) {\n            tempCourses = tempCourses.sort( ( a, b ) => {\n                return a.title.localeCompare( b.title )\n            } )\n        }\n        if ( coursesortby === 'name-z' ) {\n            tempCourses = tempCourses.sort( ( a, b ) => {\n                return b.title.localeCompare(a.title)\n            } )\n        }\n        if ( coursesortby === 'featured' ) {\n            tempCourses = tempCourses.filter(\n                ( course ) => course.featured === true\n            )\n        }\n\n        if ( filterbyprice === 'price-lowest' ) {\n            tempCourses = tempCourses.sort( ( a, b ) => {\n                return a.price - b.price\n            } )\n        }\n        if ( filterbyprice === 'price-highest' ) {\n            tempCourses = tempCourses.sort( ( a, b ) => b.price - a.price )\n        }\n        if ( filterbyprice === 'free' ) {\n            tempCourses = tempCourses.filter(\n                ( course ) => course.price === '0'\n            )\n        }\n        if ( filterbyprice === 'paid' ) {\n            tempCourses = tempCourses.filter(\n                ( course ) => course.price !== '0'\n            )\n        }\n\n        // price range\n        tempCourses = tempCourses.filter( ( course ) => course.price <= price )\n  \n        return { ...state, filtered_courses: tempCourses }\n    }\n    if ( action.type === 'CLEAR_FILTERS' ) {\n        return {\n            ...state,\n            searchbycourse: '',\n            filters: {\n                ...state.filters,\n                text: '',\n                coursesortby: 'none',\n                filterbyprice: 'no-filter-price',\n                filterbylevel: 'all',\n                price: state.filters.max_price\n            }\n        }\n    }\n    throw new Error( `No Matching '${action.type}' - action type found.` );\n}\n\nexport default filter_reducer;"]},"metadata":{},"sourceType":"module"}