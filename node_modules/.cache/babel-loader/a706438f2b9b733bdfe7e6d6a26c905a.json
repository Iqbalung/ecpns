{"ast":null,"code":"import _toConsumableArray from\"/home/fathurrohman/Works/eduvibe/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";var flatDeep=function flatDeep(arr){var d=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;return d>0?arr.reduce(function(acc,val){return acc.concat(Array.isArray(val)?flatDeep(val,d-1):val);},[]):arr.slice();};var slugify=function slugify(text){return text.toString().toLowerCase().replace(/\\s+/g,'-')// Replace spaces with -\n.replace(/[^\\w-]+/g,'')// Remove all non-word chars\n.replace(/--+/g,'-')// Replace multiple - with single -\n.replace(/^-+/,'')// Trim - from start of text\n.replace(/-+$/,'');// Trim - from end of text\n};var containsObject=function containsObject(obj,list){var i;for(i=0;i<list.length;i++){if(list[i].slug===obj.slug){return i;}}return-1;};var formatPrice=function formatPrice(number){return new Intl.NumberFormat('en-US',{style:'currency',currency:'USD'}).format(number);};var getUniqueValues=function getUniqueValues(data,type){var withAll=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'active';var unique=data.map(function(item){return item[type];});if(withAll==='active'){return['all'].concat(_toConsumableArray(new Set(unique)));}else{return _toConsumableArray(new Set(unique));}};var getUniqueValues2=function getUniqueValues2(data,itemName){var items=data.map(function(item){return item.itemName;});var singleCatArray=flatDeep(items);var itemArray=[];singleCatArray.forEach(function(cat){var obj={title:cat.trim(),slug:slugify(cat),count:1};var objIndex=containsObject(obj,itemArray);if(objIndex!==-1){var prevCount=itemArray[objIndex].count;itemArray[objIndex]={title:cat.trim(),slug:slugify(cat),count:prevCount+1};}else{itemArray.push(obj);}});};export{flatDeep,slugify,containsObject,formatPrice,getUniqueValues,getUniqueValues2};","map":{"version":3,"sources":["/home/fathurrohman/Works/eduvibe/src/utils/index.js"],"names":["flatDeep","arr","d","reduce","acc","val","concat","Array","isArray","slice","slugify","text","toString","toLowerCase","replace","containsObject","obj","list","i","length","slug","formatPrice","number","Intl","NumberFormat","style","currency","format","getUniqueValues","data","type","withAll","unique","map","item","Set","getUniqueValues2","itemName","items","singleCatArray","itemArray","forEach","cat","title","trim","count","objIndex","prevCount","push"],"mappings":"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","sourcesContent":["const flatDeep = function( arr, d = 1 ) {\r\n    return d > 0 ? arr.reduce( ( acc, val ) => acc.concat( Array.isArray (val ) ? flatDeep( val, d - 1 ) : val ), [] ) : arr.slice();\r\n}\r\n\r\nconst slugify = function( text ) {\r\n    return text\r\n        .toString()\r\n        .toLowerCase()\r\n        .replace( /\\s+/g, '-' ) // Replace spaces with -\r\n        .replace( /[^\\w-]+/g, '' ) // Remove all non-word chars\r\n        .replace( /--+/g, '-' ) // Replace multiple - with single -\r\n        .replace( /^-+/, '' ) // Trim - from start of text\r\n        .replace( /-+$/, '' ) // Trim - from end of text\r\n}\r\n\r\nconst containsObject = function( obj, list ) {\r\n    var i;\r\n    for ( i = 0; i < list.length; i++ ) {\r\n        if ( list[i].slug === obj.slug ) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n\r\nconst formatPrice = ( number ) => {\r\n    return new Intl.NumberFormat( 'en-US', {\r\n        style: 'currency',\r\n        currency: 'USD'\r\n    } ).format( number )\r\n}\r\n  \r\nconst getUniqueValues = ( data, type, withAll = 'active' ) => {\r\n    let unique = data.map( ( item ) => item[type] );\r\n    if ( withAll === 'active' ) {\r\n        return ['all', ...new Set( unique )];\r\n    } else {\r\n        return [...new Set( unique )];\r\n    }\r\n}\r\n\r\nconst getUniqueValues2 = ( data, itemName ) => {\r\n    const items = data.map(item => {\r\n        return item.itemName;\r\n    } );\r\n\r\n    let singleCatArray = flatDeep( items );\r\n    let itemArray = [];\r\n    singleCatArray.forEach( cat => {\r\n        const obj = {\r\n            title: cat.trim(),\r\n            slug: slugify( cat ),\r\n            count: 1\r\n        }\r\n        const objIndex = containsObject( obj, itemArray );\r\n        if( objIndex !== -1 ){\r\n            const prevCount = itemArray[objIndex].count;\r\n            itemArray[objIndex] = {\r\n                title: cat.trim(),\r\n                slug: slugify( cat ),\r\n                count: prevCount + 1\r\n            }\r\n        } else {\r\n            itemArray.push( obj );\r\n        }\r\n    } );\r\n}\r\n\r\nexport { flatDeep, slugify, containsObject, formatPrice, getUniqueValues, getUniqueValues2 }"]},"metadata":{},"sourceType":"module"}