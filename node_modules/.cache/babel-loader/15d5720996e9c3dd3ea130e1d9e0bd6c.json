{"ast":null,"code":"import _objectSpread from\"/home/fathurrohman/Works/eduvibe/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";var courses_reducer=function courses_reducer(state,action){if(action.type==='GET_COURSES_BEGIN'){return _objectSpread(_objectSpread({},state),{},{courses_loading:true});}if(action.type==='GET_COURSES_SUCCESS'){var featured_courses=action.payload.filter(function(course){return course.featured===true;});return _objectSpread(_objectSpread({},state),{},{courses_loading:false,courses:action.payload,featured_courses:featured_courses});}if(action.type==='GET_COURSES_ERROR'){return _objectSpread(_objectSpread({},state),{},{courses_loading:false,courses_error:true});}throw new Error(\"No Matching '\".concat(action.type,\"' - action type found.\"));};export default courses_reducer;","map":{"version":3,"sources":["/home/fathurrohman/Works/eduvibe/src/reducers/courses_reducer.js"],"names":["courses_reducer","state","action","type","courses_loading","featured_courses","payload","filter","course","featured","courses","courses_error","Error"],"mappings":"qHAAA,GAAMA,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAEC,KAAF,CAASC,MAAT,CAAqB,CACzC,GAAKA,MAAM,CAACC,IAAP,GAAgB,mBAArB,CAA2C,CACvC,sCACOF,KADP,MAEIG,eAAe,CAAE,IAFrB,GAIH,CAED,GAAKF,MAAM,CAACC,IAAP,GAAgB,qBAArB,CAA6C,CACzC,GAAME,CAAAA,gBAAgB,CAAGH,MAAM,CAACI,OAAP,CAAeC,MAAf,CACrB,SAAEC,MAAF,QAAcA,CAAAA,MAAM,CAACC,QAAP,GAAoB,IAAlC,EADqB,CAAzB,CAGA,sCACOR,KADP,MAEIG,eAAe,CAAE,KAFrB,CAGIM,OAAO,CAAER,MAAM,CAACI,OAHpB,CAIID,gBAAgB,CAAhBA,gBAJJ,GAMH,CAED,GAAKH,MAAM,CAACC,IAAP,GAAgB,mBAArB,CAA2C,CACvC,sCACOF,KADP,MAEIG,eAAe,CAAE,KAFrB,CAGIO,aAAa,CAAE,IAHnB,GAKH,CAED,KAAM,IAAIC,CAAAA,KAAJ,wBAA2BV,MAAM,CAACC,IAAlC,2BAAN,CACH,CA7BD,CA+BA,cAAeH,CAAAA,eAAf","sourcesContent":["const courses_reducer = ( state, action ) => {\n    if ( action.type === 'GET_COURSES_BEGIN' ) {\n        return { \n            ...state, \n            courses_loading: true \n        }\n    }\n\n    if ( action.type === 'GET_COURSES_SUCCESS' ) {\n        const featured_courses = action.payload.filter(\n            ( course ) => course.featured === true\n        )\n        return {\n            ...state,\n            courses_loading: false,\n            courses: action.payload,\n            featured_courses\n        }\n    }\n\n    if ( action.type === 'GET_COURSES_ERROR' ) {\n        return { \n            ...state, \n            courses_loading: false, \n            courses_error: true \n        }\n    }\n\n    throw new Error( `No Matching '${action.type}' - action type found.` );\n}\n  \nexport default courses_reducer;"]},"metadata":{},"sourceType":"module"}